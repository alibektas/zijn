[workspace]
resolver = "3"
members = [ "auth", "crates/client", "crates/keycloak_admin_api", "crates/server" , "xtask"]

[workspace.dependencies]
clap = { version = "4.5.32", features = ["derive"] }
dotenv = "0.15.0"
chrono = "0.4.40"
serde_json = "1.0.116"
serde = { version = "1.0.203" , features = ["derive"] }
env_logger = "0.11.7"

diesel = { version = "2.1.0", features = ["postgres", "r2d2", "uuid", "chrono"] }
diesel_derives = "2.2.4"
uuid = { version = "1.16.0", features = [ "serde" , "v4"] }

actix-web = { version = "4", features = ["rustls-0_23"] }
hyper = { version = "1.6.0", features = ["http2"] }
hyper-rustls = "0.27.5"
rustls-pemfile = "2"
rustls = "0.23.25"
keycloak = "26.1.0"
futures-util = "0.3.31"


# Dependents crates/server & crates/client
reqwest = { version = "0.12.15" , features = ["json", "rustls-tls"]}
tokio = { version = "1.44.1", features=["full"]}
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }

# local crates
keycloak_admin_api = { path = "./crates/keycloak_admin_api" }

[workspace.lints.clippy]
## lint groups
complexity = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
restriction = { level = "allow", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

## allow following lints
too_long_first_doc_paragraph = "allow"
# subjective
single_match = "allow"
# () makes a fine error in most cases
result_unit_err = "allow"
# We don't expose public APIs that matter like this
len_without_is_empty = "allow"
# We have macros that rely on this currently
enum_variant_names = "allow"
# Builder pattern disagrees
new_ret_no_self = "allow"
# Has a bunch of false positives
useless_asref = "allow"
# Has false positives
assigning_clones = "allow"
# Does not work with macros
vec_init_then_push = "allow"
# Our tests have a lot of these
literal_string_with_formatting_args = "allow"
# This lint has been empowered but now also triggers on cases where its invalid to do so
# due to it ignoring move analysis
unnecessary_map_or = "allow"

## Following lints should be tackled at some point
too_many_arguments = "allow"
type_complexity = "allow"
wrong_self_convention = "allow"

## warn at following lints
# CI raises these to deny
dbg_macro = "warn"
todo = "warn"
print_stdout = "warn"
print_stderr = "warn"

rc_buffer = "warn"
str_to_string = "warn"
